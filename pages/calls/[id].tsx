import type { NextPage } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { useEffect, useState } from 'react'
import { Container, Row, Col, Card, CardHeader, CardBody, ListGroup, ListGroupItem } from 'reactstrap'
import { getRequest } from '../../api'
import ENDPOINTS from '../../api/endpoints'
import Button from '../../globals/components/button/Button'
import AddNoteModal from '../../modals/AddNoteModal'
import styles from '../../styles/Home.module.scss'
import { CallItem } from '../../types/calls.interface'

const Home: NextPage = () => {

    const [data, setData] = useState<CallItem>()
    const [modalVisible, setModalVisible] = useState(false)

    const { query } = useRouter();

    useEffect(() => {
        fetchAdminDetail()
        // eslint-disable-next-line
    }, []);

    async function fetchAdminDetail() {
        try {
            const id = typeof query.id === 'string' ? query.id : ''
            const URL = ENDPOINTS.calls.getCallDetail.replace(':id', id)
            const data = await getRequest(URL)
            setData(data)

        } catch (error) {
            console.error(error);
        }
    }

    interface ItemProps {
        label: string,
        value: string
    }

    const Item: React.FC<ItemProps> = ({ label, value }) => {
        return (
            <Row>
                <Col lg={2}><b>{label}:</b></Col>
                <Col>{value}</Col>
            </Row>
        )
    }

    if (!data) return <></>
    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Container fluid>
                <Row>
                    <Col>
                        <Card>
                            <CardHeader className="fw-bold">Call Id: {data.id}</CardHeader>
                            <CardBody>
                                <Item label={'From'} value={data.from} />
                                <Item label={'To'} value={data.to} />
                                <Item label={'Via'} value={data.via} />
                                <Item label={'Call type'} value={data.call_type} />
                                <Item label={'Archived'} value={String(data.is_archived)} />
                                <Item label={'Duration'} value={data.duration} />
                                <Item label={'Direction'} value={data.direction} />
                                <Item label={'Date/Time'} value={data.createdAt} />
                            </CardBody>
                        </Card>
                    </Col>
                </Row>
                <br />
                <Row>
                    <Col>
                        <Card>
                            <CardHeader className="fw-bold">
                                <Row>
                                    <Col>Notes</Col>
                                    <Col className="d-flex justify-content-end"><Button size="sm" onClick={() => setModalVisible(true)} title='Add note'/></Col>
                                </Row>
                            </CardHeader>
                            <CardBody>
                                <ListGroup>
                                    {data?.notes?.map(note => <ListGroupItem>{note.content}</ListGroupItem>)}
                                </ListGroup>
                            </CardBody>

                        </Card>
                    </Col>
                </Row>

                <AddNoteModal itemId={data.id} visible={modalVisible} setData={setData} toggleModal={() => setModalVisible(!modalVisible)} />
            </Container>
        </div>
    )
}

export default Home
